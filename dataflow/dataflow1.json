{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DSInput",
						"type": "DatasetReference"
					},
					"name": "MoviesDataSet"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DSOutput",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "Year2002to2007"
				},
				{
					"name": "ComedyGenre"
				},
				{
					"name": "RottenTomoto"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Film as string,",
				"          Genre as string,",
				"          {Lead Studio} as string,",
				"          {Audience score %} as string,",
				"          Profitability as string,",
				"          {Rotten Tomatoes %} as string,",
				"          {Worldwide Gross} as string,",
				"          Year as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesDataSet",
				"MoviesDataSet filter(toInteger(Year)>=2002 &&\r",
				"toInteger(Year)<=2007) ~> Year2002to2007",
				"Year2002to2007 filter(Genre=='Comedy') ~> ComedyGenre",
				"ComedyGenre filter(toFloat({Rotten Tomatoes %}) >= 75) ~> RottenTomoto",
				"RottenTomoto select(mapColumn(",
				"          Film,",
				"          Genre,",
				"          {Audience score %},",
				"          Profitability,",
				"          {Rotten Tomatoes %},",
				"          Year",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink"
			]
		}
	}
}